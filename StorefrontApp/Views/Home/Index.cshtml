@model StorefrontApp.Models.HomeViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "Store Home Page";
}
<head>
    <link rel="stylesheet" type="text/css" href="~/css/home_storepage_styles.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
</head>

<main>
    <div class="container">
        <div class="row">
            @if (Model.ProductTypeOptions != null && Model.ProductTypeOptions.Any())
            {
                <div class="col-md-2">
                    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="row">
                            @Html.LabelFor(m => m.SearchInput, new { @style = "text-decoration:underline" })
                            @Html.TextBoxFor(m => m.SearchInput, new { @class = "form-control", @Value=Model.SearchInput})
                        </div>
                        <br />
                        <div class="row">
                            @Html.LabelFor(m => m.SortOptions, new { @style = "text-decoration:underline" })
                            @Html.DropDownListFor(m => m.SortOptions, new SelectList(Enum.GetValues(typeof(StorefrontApp.Models.Sort))), new { @class = "form-control" })
                        </div>
                        <br />
                        <div class="form-check-types">
                            @Html.LabelFor(m => m.ProductTypeOptions, new { @style="text-decoration:underline" })
                            <br>
                            @for (int i = 0; i < Model.ProductTypeOptions.Count; i++)
                            {
                                @Html.Label("", Model.ProductTypeOptions[i].NameOrType, new { @class = "form-check-label"});
                                @Html.Raw("&nbsp")
                                @Html.HiddenFor(m => m.ProductTypeOptions[i].NameOrType)
                                @Html.CheckBoxFor(m => m.ProductTypeOptions[i].Checked, new { @class = "form-check-input", id = "productType_" + i })
                                <br />
                            }
                            <br />
                        </div>
                        <div class="form-check-suppliers">
                            @Html.LabelFor(m => m.SuppliersList, new { @style= "text-decoration:underline" }) 
                            <br />
                            @for (int i = 0; i < Model.SuppliersList.Count; i++) 
                            {
                                @Html.Label("", Model.SuppliersList[i].NameOrType, new { @class = "form-check-label" })
                                @Html.Raw("&nbsp")
                                @Html.HiddenFor(m => m.SuppliersList[i].NameOrType)
                                @Html.CheckBoxFor(m => m.SuppliersList[i].Checked, new { @class = "form-check-input", id = "supplierName_" + i  })
                                <br />
                            }
                        </div>
                        <br />
                        <button type="submit" class="btn btn-outline-primary">Search</button>
                    }
                </div>
                <br />
                if (ViewBag.Message != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @ViewBag.Message
                    </div>
                }
            }
            <div class="col-lg">
                <div class="container">
                    @if (Model.Products != null && Model.Products.Any())
                    {
                        <div class="row">
                            @foreach (var product in Model.Products)
                            {
                                <div class="col-md-6 mb-4">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-auto">
                                                    <h4 class="card-title">@product.ProductName</h4>
                                                </div>
                                            </div>
                                            <br />
                                            <h5 class="card-subtitle mb-2 text-muted">Type: @product.ProductType, Price: @product.Price</h5>
                                            <ul class="list-group">
                                                <li class="list-group-item">Description: @product.ProductDescription</li>
                                                <li class="list-group-item">Supplier: @product.Supplier.SupplierName</li>
                                            </ul>
                                            <br />
                                            @if (Model.LoggedIn && Model.StoreAccountCreated)
                                            {
                                                using (Html.BeginForm("AddToCart", "Home", new { productID = product.ProductID, quantity = Model.Quantity }, FormMethod.Post))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <div class="row">
                                                        <div class="col-auto">
                                                            @Html.LabelFor(m => m.Quantity)
                                                            @Html.TextBoxFor(m => m.Quantity, new { @class = "form-control", @Value = "0" })
                                                        </div>
                                                        <div class="col-auto align-content-end" style="padding:0px">
                                                            <i class="bi bi-arrow-left"></i>
                                                            <button type="submit" class="btn btn-outline-primary">Add to Cart</button>
                                                        </div>
                                                    </div>

                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-primary text-center top-50" role="alert">No data found.</div>
                    }
                </div>
            </div>
            @if (Model.ShoppingCart.Any() && Model.ShoppingCart != null)
            {
                
                <div class="col-md-2 overflow-auto">
                    <strong>Shopping Cart Items:</strong>
                    @foreach (var cart in Model.ShoppingCart)
                    {
                        <ul class="list-group">
                            @foreach (var item in cart.ShoppingCartItems)
                            {
                                <li class="list-group-item">
                                    <div class="card">
                                        <div class="card-body">
                                            <h6 class="card-title">@item.Product.ProductName</h6>
                                            <h6 class="card-subtitle mb-2 text-muted">Price: @item.Product.Price<br />Qty: @item.Quantity</h6>
                                            @using (Html.BeginForm("RemoveFromCart", "Home", new { productID = item.ProductID, shoppingCartID = cart.ShoppingCartID, returnControllerPath = "Home" }, FormMethod.Post))
                                            {
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-outline-danger">Remove</button>
                                            }
                                        </div>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                </div>
            }
        </div>
    </div>
    <br />
    <div>
        @Html.PagedListPager(Model.Products, page => Url.Action("Index", new {
           page,
           searchInput = Model.SearchInput,
           sortOptions = Model.SortOptions,
           selectedTypes = Model.SelectedProductTypes,
           selectedSuppliers = Model.SelectedSuppliers
        }))
    </div>
</main>